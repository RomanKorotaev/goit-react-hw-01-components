{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendListItem/FriendListItem.module.css","components/Statistics/Statistics.module.css","components/StatisticItem/StatisticItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Transaction/Transaction.module.css","components/Profile/Profile.js","components/StatisticItem/StatisticItem.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/Transaction/Transaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","props","name","tag","location","avatar","stats","className","s","profile","src","alt","item","label","quantity","followers","views","likes","StatisticItem","percentage","classNam","Statistics","title","statistics","stat_list","map","id","FriendListItem","status","onLine","offLine","width","FriendList","friends","frieds_list","isOnline","Transaction","type","amount","currency","propTypes","key","PropTypes","string","isRequired","number","TransactionHistory","items","transaction_history","headerTbl","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8115aa21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__v-uHu\",\"description\":\"Profile_description__7rfql\",\"avatar\":\"Profile_avatar__1M89N\",\"name\":\"Profile_name__2F0Nc\",\"tag\":\"Profile_tag__2UlYw\",\"location\":\"Profile_location__3pngP\",\"stats\":\"Profile_stats__2MnF7\",\"label\":\"Profile_label__Kf0V7\",\"quantity\":\"Profile_quantity__e0ZMw\",\"item\":\"Profile_item__oBYsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__nW8IJ\",\"avatar\":\"FriendListItem_avatar__2PMIm\",\"name\":\"FriendListItem_name__yF2G9\",\"onLine\":\"FriendListItem_onLine__2Py_8\",\"offLine\":\"FriendListItem_offLine__1XeKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2Rcu9\",\"title\":\"Statistics_title__2wFsh\",\"stat_list\":\"Statistics_stat_list__2_akW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticItem_item__2kFeY\",\"label\":\"StatisticItem_label__1QEO5\",\"percentage\":\"StatisticItem_percentage__3f_Gb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__12GJg\",\"headerTbl\":\"TransactionHistory_headerTbl__3KcM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Transaction_item__3GEkN\"};","\r\nimport s  from './Profile.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nfunction Profile (props) {\r\n      const {\r\n        name,\r\n        tag,\r\n        location = 'не известно',\r\n        avatar = 'не известно',\r\n        stats} = props;\r\n\r\n        return (\r\n            <div className={s.profile}>\r\n  <div className=\"s.description\">\r\n    <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={s.avatar}\r\n    />\r\n    <p className={s.name}>{name}</p>\r\n    <p className={s.tag}>@{tag}</p>\r\n    <p className={s.location}>{location}</p>\r\n  </div>\r\n\r\n    <ul className={s.stats}>\r\n    <li  className={s.item}>\r\n        <span className={s.label}>Followers </span>\r\n        <span className={s.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li className={s.item}>\r\n        <span className={s.label}>Views </span>\r\n        <span className={s.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li className={s.item}>\r\n        <span className={s.label}>Likes </span>\r\n        <span className={s.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n        )\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n\r\n    //  Проверяем пришёл ли объект\r\n    stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  })\r\n\r\n}\r\n\r\nexport default Profile;\r\n\r\n/* \r\n//  Это пример react-компонента. По факту это функция, котрая возвращает нам разметку (родительский тег)\r\n//  Не забывать везде закрывать теги (даже одинарные). Имена  react-компонентов ОБЯЗАТЕЛЬНО писать с БОЛЬШОЙ буквы. \r\n//  Иначе  jsx  не воспримеет её как переменную, а решит что это просто строка с тегом. Ничего не будет рендерится.\r\nfunction Painting(props) {\r\n    const {\r\n        imageUrl = defaultImage, //так прописывается путь к дефолтной картинке\r\n        url,\r\n        title,\r\n        author = 'не известно',\r\n        price,\r\n        quantity} = props;\r\n    return (<div className={StylePainting.Painting}>\r\n        <b className={StylePainting.PaintingTestStyleVariable}> Component: Painting.js (Тестируем применение</b>\r\n        <b className={StylePainting.PaintingTestStyleVariable}>переменной css в подульных  css-файлах) </b>\r\n        <img src={url} alt={title} width=\"480\" />\r\n        <h2>{title}</h2>\r\n        <p>\r\n            Автор: <a href={author.url}>{author.tag}</a>\r\n        </p>\r\n        <p className=\"TitleBorder\">Цена: {price}  кредитов</p>   \r\n        <p>Доступность:  { quantity < 10 ? 'заканчивается' : 'есть в наличии' } </p>\r\n        <button type=\"button\">Добавить в корзину</button>\r\n    </div >\r\n    );\r\n}\r\n\r\n// Выше импортируем библиотеку с проверкой типов  prop-types, а ниже пример использования\r\n// если вместо цифры, например, в цене передать не число, а строку, то в консоле будет предупреждение об ошибке\r\nPainting.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    url: PropTypes.string,\r\n    title: PropTypes.string,\r\n    author: PropTypes.string,\r\n    price: PropTypes.number,\r\n    quantity:PropTypes.number\r\n}\r\n\r\nexport default Painting */\r\n","import s from './StatisticItem.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction StatisticItem (props) {\r\n      const {\r\n        label,\r\n        percentage} = props;\r\n\r\n        return (\r\n            <li className={s.item}>\r\n                <span classNam={s.label}>{label}</span>\r\n                <span classNam={s.percentage}>{percentage}</span>\r\n            </li>\r\n        )\r\n}\r\n\r\nStatisticItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  }\r\n\r\n\r\nexport default StatisticItem;","import s from './Statistics.module.css'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport StatisticItem from '../StatisticItem/StatisticItem'\r\n\r\n\r\nfunction Statistics({title,  stats}) {\r\n     \r\n        return (\r\n            <section className={s.statistics}>\r\n                { title && <h2 className={s.title}>{title}</h2> }\r\n\r\n                <ul className={s.stat_list}>\r\n                    {stats.map( (item) => (\r\n                                <StatisticItem \r\n                                    key={item.id}\r\n                                    label={item.label}\r\n                                    percentage={item.percentage}\r\n                                 />\r\n                                ))}  \r\n                </ul>\r\n            </section>\r\n        )\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  // Массив объектов конкретного типа использую там, где MAP\r\n  stats: PropTypes.arrayOf(\r\n    // Объект с определённой структурой\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\n\r\nexport default Statistics;\r\n","import s from './FriendListItem.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FriendListItem(props) {\r\n    const {\r\n        avatar,\r\n        name,\r\n       status\r\n    } = props;\r\n\r\n    return (\r\n            <li className={s.item}>\r\n            {/* <span className={status ? s.onLine : s.offLine}> {status ? ('OnLine') : ( 'OffLine!') }</span>              */}\r\n            <span className={status ? s.onLine : s.offLine}></span> \r\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.name}> {name}</p>\r\n            </li>\r\n            )\r\n }\r\n\r\n\r\nFriendListItem.propTypes = {\r\n   avatar: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   isOnline: PropTypes.bool.isRequired\r\n  }\r\n\r\n\r\nexport default FriendListItem;","import s from './FriendList.module.css'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem'\r\n\r\nfunction FriendList({ friends }) {\r\n    \r\n    return (\r\n         <ul className={s.frieds_list}>\r\n                    {friends.map( (item) => (\r\n                                <FriendListItem \r\n                                    key={item.id}\r\n                                    avatar={item.avatar}\r\n                                    name={item.name}\r\n                                    status={item.isOnline}\r\n                                 />\r\n                                ))}  \r\n                </ul>\r\n     )   \r\n}\r\n\r\nFriendList.propTypes = {\r\n   key: PropTypes.number.isRequired,\r\n   avatar: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   isOnline: PropTypes.bool.isRequired\r\n    \r\n  }\r\n\r\n\r\nexport default  FriendList;","import s from './Transaction.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Transaction(props) {\r\n    const {\r\n        type,\r\n        amount,\r\n        currency\r\n    } = props;\r\n\r\n    return (\r\n        <tr className={s.item }>\r\n            <td>{ type }</td>\r\n            <td>{ amount }</td>\r\n            <td>{currency}</td>\r\n         </tr>\r\n            )\r\n }\r\n\r\n\r\nTransaction.propTypes = {\r\n   type: PropTypes.string.isRequired,\r\n   amount: PropTypes.number.isRequired,\r\n   currency: PropTypes.string.isRequired\r\n  }\r\n\r\n\r\nexport default Transaction;","import s from './TransactionHistory.module.css'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Transaction from '../Transaction/Transaction'\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return (\r\n        <table className={s.transaction_history}>\r\n  <thead>\r\n    <tr className={s.headerTbl}>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n                {items.map((item) => (\r\n                    < Transaction\r\n                        key={item.id}\r\n                        type={item.type }\r\n                        amount={item.amount }\r\n                        currency={item.currency}\r\n                    />\r\n                    \r\n                ))}\r\n  </tbody>\r\n</table>\r\n    )\r\n}\r\n \r\nTransaction.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n   type: PropTypes.string.isRequired,\r\n   amount: PropTypes.number.isRequired,\r\n   currency: PropTypes.string.isRequired\r\n  }\r\n\r\nexport default  TransactionHistory;","\nimport './App.css';\n\nimport Profile from './components/Profile/Profile';\nimport user from './db/user.json'\n\nimport Statistics from './components/Statistics/Statistics'\nimport statisticalData from './db/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList'\nimport friends from './db/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\nimport transactions from './db/transactions.json'\n\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <section>\n            <p className=\"titleOfApp\"> Задание 1 - Профиль социальной сети </p>\n                <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats} \n                />\n          </section>\n          \n            <section>             \n              <p  className=\"titleOfApp\"> Задание 2 - Секция статистики </p>\n            \n              <Statistics title=\"Upload stats\" stats={statisticalData} />\n              <Statistics stats={statisticalData} /> \n      </section>\n      \n      <section>             \n              <p  className=\"titleOfApp\"> Задание 3 - Список друзей </p>\n              <FriendList friends={friends} />\n      </section>\n\n       <section>             \n              <p  className=\"titleOfApp\"> Задание 4 - История транзакций </p>\n              <TransactionHistory items={transactions} />\n      </section>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n// import logo from './logo.svg';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//               </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n//////////////////================================\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}